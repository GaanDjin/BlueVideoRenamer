<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="richTextBox1.Text" xml:space="preserve">
    <value>"d"	The day of the month, from 1 through 31.	2009-06-01T13:45:30 -&gt; 1
"dd"	The day of the month, from 01 through 31.	2009-06-01T13:45:30 -&gt; 01
"ddd"	The abbreviated name of the day of the week.	2009-06-15T13:45:30 -&gt; Mon (en-US)
"dddd"	The full name of the day of the week.	2009-06-15T13:45:30 -&gt; Monday (en-US)
"g", "gg"	The period or era. 	2009-06-15T13:45:30.6170000 -&gt; A.D.
"h"	The hour, using a 12-hour clock from 1 to 12.  	2009-06-15T01:45:30 -&gt; 1
"hh"	The hour, using a 12-hour clock from 01 to 12.	2009-06-15T01:45:30 -&gt; 01
"H"	The hour, using a 24-hour clock from 0 to 23.  	2009-06-15T01:45:30 -&gt; 1
"HH"	The hour, using a 24-hour clock from 00 to 23.	2009-06-15T01:45:30 -&gt; 01
"m"	The minute, from 0 through 59.	2009-06-15T01:09:30 -&gt; 9
"mm"	The minute, from 00 through 59.	2009-06-15T01:09:30 -&gt; 09
"M"	The month, from 1 through 12.	2009-06-15T13:45:30 -&gt; 6
"MM"	The month, from 01 through 12.	2009-06-15T13:45:30 -&gt; 06
"MMM"	The abbreviated name of the month.	2009-06-15T13:45:30 -&gt; Jun (en-US)
"MMMM"	The full name of the month.	2009-06-15T13:45:30 -&gt; June (en-US)
"s"	The second, from 0 through 59.	2009-06-15T13:45:09 -&gt; 9
"ss"	The second, from 00 through 59.	2009-06-15T13:45:09 -&gt; 09
"t"	The first character of the AM/PM designator. 2009-06-15T13:45:30 -&gt; P (en-US)
"tt"	The AM/PM designator.	2009-06-15T13:45:30 -&gt; PM (en-US)
"y"	The year, from 0 to 99.	0001-01-01T00:00:00 -&gt; 1
"yy"	The year, from 00 to 99.	0001-01-01T00:00:00 -&gt; 01
"yyy"	The year, with a minimum of three digits.	0001-01-01T00:00:00 -&gt; 001
"yyyy"	The year as a four-digit number.	0001-01-01T00:00:00 -&gt; 0001
"yyyyy"	The year as a five-digit number.	0001-01-01T00:00:00 -&gt; 00001
"z"	Hours offset from UTC, with no leading zeros.	2009-06-15T13:45:30-07:00 -&gt; -7
"zz"	Hours offset from UTC, with a leading zero for a single-digit value.	2009-06-15T13:45:30-07:00 -&gt; -07
"zzz"	Hours and minutes offset from UTC.	2009-06-15T13:45:30-07:00 -&gt; -07:00
":"	The time separator.	2009-06-15T13:45:30 -&gt; : (en-US) 
Please note that ":" is an invalid filename char and will be replaced by the default character.
"string" Literal string delimiter.	2009-06-15T13:45:30 ("arr:" h:m t) -&gt; arr: 1:45 P
%	Defines the following character as a custom format specifier.	2009-06-15T13:45:30 (%h) -&gt; 1
\	The escape character.	2009-06-15T13:45:30 (h \h) -&gt; 1 h	
Any other character	The character is copied to the result string unchanged.

For more technical information see: https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings</value>
  </data>
  <data name="richTextBox2.Text" xml:space="preserve">
    <value>The formats used as a template for renaming files. 
        
        %1, %series% - The name of the series
        %2, %title% - The title of the episode
        %3, %season% - the season number (w/ leading zero)
        %4, %seriesyear% - the year the series was aired
        %5, %genre% - the genres this series belongs to. Comma seperated.
        %6, %episodenumber% - The number of the episode in the season
        %7, %filename% - The original name of the file
        %8, %filenumber% - the number of the file being processed.
        %9, %comment% - The comment. Not implemented
        %0, %bitrate% - Attempts to get the bitrate from the OS. If it fails it will be removed.
        %t, %playtime% - Attempts to get the The Duration of the video from the OS. If it fails it will be removed.
        &amp;gt; 120 min then show "x hrs y min z sec"
        &amp;lt;= 120 min then show "y min z sec"
        %res%, %resolution% - Attempts to get the The resolution of the video from the OS. If it fails it will be removed.
        %directors% - The episode directors, comma seperated
        %writers% - The episode writers, comma seperated
        %overview% - The episode summary / synopsis. (Warning this will probably cause the app to flip out due to windows max file length of 255 chars!)
        %absolutenumber% - The absolute number of this episode across all seasons.
        %status% - The status of the series. 
        %episodeAired% - The date the episode was first aired. 
        %netowrk% - The network the episode was first aired on.
        %seriesoverview% - The series summary / synopsis. (Warning this will probably cause the app to flip out due to windows max file length of 255 chars!)
        %airsdayofweek% - The days of the week episodes air on, comma seperated.
        %airstime% - the time of day the episodes starts, comma seperated
        %rating% - The TVDB rating for this episode.
        
        Other characters will be treated at literal values. For instance:
        "%1 - S%3E%6 - %2" will result in an output file like this: "My TV Show - S01E02 - The Second episode"
        
	A / or \ character will be treated as a directory seperator. So in templates with a directory seperator character will create sub directories under the root directory selected (The folder selected on the left hand side in the main window)

	For instance:
        "%1 - Season %3\%1 - S%3E%6 - %2" will result in an output file like this: "My TV Show - Season 01\My TV Show - S01E02 - The Second episode"</value>
  </data>
  <data name="richTextBox3.Text" xml:space="preserve">
    <value>An Array of RegEx patterns to check if a file is a valid video file. 
Generally this is just a RexEx matching file extensions.

Basically this list filters results to remove the clutter from results. If you want to show all files you can use ".+"

Common Video File formats:

\.3g2$	EVRC, SMV or VMR-WB Common video format for cell phones
\.3gp$	Common video format for cell phones
\.amv$	Proprietary video file format produced for MP4 players and S1 MP3 players with video playback
\.asf$	Advanced Systems Format(ASF)
\.avi$	AVI Uses RIFF
\.drc$	Dirac
\.flv$	Flash Video(FLV)
\.f4v$	Flash Video(FLV)
\.f4p$	Flash Video(FLV)
\.f4a$	Flash Video(FLV)
\.f4b$	Flash Video(FLV)
\.gif$	Simple animation, inefficient compression, no sound, widely supported
\.gifv$	Video alternative to GIF
\.m2v$	MPEG-2
\.m4p$	MPEG-4
\.m4v$	Developed by Apple, used in iTunes.Very similar to MP4 format, but may optionally have DRM.
\.mkv$	Matroska
\.mng$	Multiple-image Network Graphics
\.mov$	QuickTime File Format
\.mp4$	MPEG-4
\.mp2$	MPEG-1
\.mpe$	MPEG-1
\.mpeg$	MPEG-1
\.mpg$	MPEG-1
\.mpv$	MPEG-1
\.mxf$	Material Exchange Format(MXF)
\.nsv$	Nullsoft Streaming Video (NSV) 
\.ogv$	Ogg Theora, Dirac Vorbis, FLAC
\.ogg$	Ogg Video
\.qt$	QuickTime File Format
\.rm$	RealMedia (RM) (Really who uses this format after the s/w fiasco?!?!?)
\.rmvb$	RealMedia Variable Bitrate(RMVB) (Really who uses this format after the s/w fiasco?!?!?)
\.roq$	used by Quake 3
\.svi$	Samsung video format for portable players
\.vob$	Files in VOB format have.vob filename extension and are typically stored in the VIDEO_TS folder at the root of a DVD.The VOB format is based on the MPEG program stream format.
\.webm$	Royalty-free format created for HTML5 video.
\.wmv$	Windows Media Video
\.yuv$	Raw video format</value>
  </data>
  <data name="richTextBox5.Text" xml:space="preserve">
    <value>A list of RegEx patterns for files that may be downloaded but unwanted.

\.nfo$	Info file. Actually a system format but downloads use it as a text file.
\.txt$	Text file
sample\\.\\w{2,4}$	Removes any file that ends in sample right before the extension.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAIAAAACAAAAAgAA
        AAMAAAADAAAAAwAAAAMAAAAEAAAABAAAAAQAAAAEAAAAAwAAAAMAAAADAAAAAwAAAAIAAAACAAAAAgAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABAAAAAwAAAASAAAAGQAA
        AB8AAAAlAAAAKgAAAC4AAAAxAAAAMwAAADQAAAA0AAAANAAAADQAAAAyAAAAMQAAAC4AAAAqAAAAJQAA
        AB8AAAAYAAAAEQAAAAgAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAJAAAAFQAA
        ACAAAAAtAAAAOgAAAEQAAABOAAAAVgAAAFsFBARkKiMgvjUsKP81LCj/KiMgvgUEBGUAAABbAAAAVgAA
        AE8AAABGAAAAOwAAADAAAAAkAAAAFAAAAAYAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAA
        AAUAAAAMAAAAEgAAABoAAAAgGRUTPSEbGVIAAAAuAAAAMi4mIpBhVE3/lIN6/5SDev9hVE3/LiYikAAA
        ADIAAAAvIRsYUxkUEj4AAAAiAAAAHAAAABQAAAAKAAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAEAAAABAAAAAj8zLYtIOzX/TkE7/z8zLY4AAAADPzMtrHxtZP+ci4H/nIuB/3xt
        ZP8/My2sAAAAAz8zLY5OQTv/SDs1/z8zLYsAAAACAAAAAgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABENzGQXU9H/5aDef+XhHr/VkdA/0Q3MYFENzHDjXxz/6SR
        h/+kkYf/jXxz/0Q3McNENzGBVkdA/5eEev+Wg3n/XU9H/0Q3MZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASjs0EE9AOP+fi4H/oIyC/6SQhv+ciH7/alpR/4Bu
        Zf+plYz/p5OJ/6eTif+plYz/gG5l/2paUf+ciH7/pJCG/6CMgv+fi4H/T0A4/0o7NBAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUEA4kH1qYf+wm5H/ppGH/6mU
        iv+umY//rZiO/6mUiv+sl43/rJeN/6mUiv+tmI7/rpmP/6mUiv+mkYf/sJuR/35rYv9QQDiQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV0Q8CQAAAABXRDwYWUY+/6yV
        iv+xmo//r5iN/6+Yjf/FrqP/0Lmu/9nCt//Zwrf/0Lmu/8Wuo/+vmI3/r5iN/7Gaj/+slYv/WUY+/1dE
        PBsAAAAAV0Q8CQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF1JQJNfS0L/XUlA1V1J
        QJlpVEv/tZ6T/7Sdkv/Bqp//1r+0/9C5rv/Isab/xK2i/8Stov/Isab/0Lmu/9a/tP/Cq6D/tJ2S/7We
        k/9pVEv/XUlAmV1JQNVfS0L/XUlAkwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkTkQhbVZM/6iP
        hP+giH3/knpv/6mRhv+9pJn/xKug/9nAtf/Lsqf/yK+k/8ivpP/FrKH/xayh/8ivpP/Ir6T/y7Kn/9nA
        tf/Eq6D/vaSZ/6mRhv+Sem//oIh9/6iPhP9tVkz/ZE5EIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGpS
        SHiLcmj/t56S/7Oajv+7opb/uJ+T/7qhlf/ZwLT/yrGl/8yzp/+8o5j/h29k/3JaUP9yWlD/h29k/7yj
        mP/Ms6f/yrGl/9nAtP+6oZX/uJ+T/7uilv+zmo7/t56S/4tyaP9qUkh4AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAb1ZMp5+Fev/Bp5v/wKaa/7yilv++pJj/zLKm/9C2qv/IrqL/uaCU/3VcUv9vVkx7b1ZMGG9W
        TBhvVkx7dVxS/7mglP/IrqL/0Laq/8yypv++pJj/vKKW/8Cmmv/Bp5v/noR5/29WTKQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABzWk8+c1pPp451av+2nJD/z7Wp/8Sqnv/Vu6//y7Gl/8yypv+NdGj/c1pPbAAA
        AAAAAAAAAAAAAAAAAABzWk9sjXRo/8yypv/LsaX/1ryw/8Sqnv/Ptan/tpyQ/451av9zWk+kc1pPOwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAd11RWnddUfPMsqb/ya+j/9i+sv/KsKT/zbOn/3th
        Vf93XVEPAAAAAAAAAAAAAAAAAAAAAHddUQx7YVX/zbOn/8qwpP/XvbH/yK6i/860qP93XVH6d11RWgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHthVAN7YVRde2FU+s61qf/KsaX/z7aq/8qx
        pf/Otan/f2VY/3thVA8AAAAAAAAAAAAAAAAAAAAAe2FUDH5kV//Otan/yrGl/861qf/KsaX/zrWp/3th
        VPp7YVRae2FUAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/ZFhCgGVZ/5Z8cP+5oZT/1Lyv/821
        qP/AqJv/zrap/9K6rf+XfXD/f2RYbwAAAAAAAAAAAAAAAAAAAAB/ZFhslnxw/9K6rf/Otqn/wamc/821
        qP/UvK//uKCT/5Z8cP+AZVn/f2RYPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAINoW6uvlon/zLWo/863
        qv/Ot6r/0ruu/7milf/Su67/07yv/8Ornv+IbWD/g2hbe4NoWxuDaFsbg2hbe4htYP/Cqp3/0ruu/9K7
        rv+6o5b/0ruu/863qv/Ot6r/zLWo/66ViP+DaFuoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhmteeKeP
        gv/WwLP/1b+y/+DKvf/bxbj/z7ms/7OdkP/TvbD/2MK1/8expP+dhHf/jXJl/41yZf+dhHf/x7Gk/9jC
        tf/SvK//s52Q/8+5rP/bxbj/4Mq9/9W/sv/WwLP/p4+C/4ZrXngAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACKb2Eeknhq/9rFuP/SvK//v6ib/9fBtP/l0MP/w66h/6yXiv/NuKv/1sG0/9fCtf/TvrH/076x/9fC
        tf/WwbT/zbir/6uWif/DrqH/5dDD/9fBtP+/qJv/0ryv/9rFuP+SeGr/im9hHgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACNcmSTkHVn/41yZNWNcmSZmX9x/+PPwv/cyLv/yLSn/6qWif+7p5r/yrap/9XB
        tP/VwbT/yrap/7unmv+qlon/yLSn/9zIu//jz8L/mX9x/41yZJmNcmTVkHVn/41yZJMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACRdmcJAAAAAJF2ZxiTeGn/3su9/+TRxP/hzsH/2MW4/8Gu
        of+vnI//o5CD/6OQg/+vnI//wa6h/9jFuP/hzsH/5NHE/97Lvf+TeGn/kXZnGwAAAACRdmcJAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlHlqkLqklv/q2Mv/49HE/+za
        zf/y4NP/69nM/93Lvv/ayLv/2si7/93Lvv/r2cz/8uDT/+zazf/k0sX/6tjL/7ull/+UeWqQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJd8bBCbgXH/4tHE/+nY
        y//w39L/7NvN/7mik//Ouav/8uHU/+vazf/r2s3/8uHU/865q/+5opP/7NvN//Df0v/p2Mv/4tHE/5uB
        cf+XfGwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJp/
        b5CwmIj/69rM/+/e0P+sk4T/mn9vgZp/b8Pfy77/8eDT//Hg0//fy77/mn9vw5p/b4Gsk4T/797Q/+va
        zP+wmIj/mn9vkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJyBcYqjiXr/q5KC/5yBcY0AAAAAnIFxq9TBs//z49f/8+PX/9TBs/+cgXGrAAAAAJyB
        cY2rkoL/o4l6/5yBcYoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ6Dchieg3IvAAAAAAAAAACeg3Jzwqyd//Pk1//z5Nf/wqyd/56D
        cnMAAAAAAAAAAJ6Dci+eg3IYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKCFdAqghXSToIV0/KCF
        dPyghXSToIV0CgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA///////////4AAA/4AAAD+AAAAfgAAAP+AAAH/4AAH/8AAA//gAAf/oA
        AF/wAAAP4AAAB+AAAAfgAAAH4APAB/gDwB/wA8AP4APAB+AAAAfgAAAH4AAAB/AAAA/6AABf/gAAf/wA
        AD/+AAB//wgQ//+YGf//+B////////////8=
</value>
  </data>
</root>